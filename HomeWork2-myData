#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

#define READ_END 0 
#define WRITE_END 1

int main(int argc, char *argv[]) {
  
  int fd[2];
  pid_t pid;
  FILE *fp;
  fp = fopen(argv[1],"r");
  int i = dosyaSize(argv[1]);
  char write_msg[i];
  char read_msg[i];

  fread(write_msg, sizeof(char),sizeof(write_msg),fp);
  
   if(argc ==2)
    { 
      printf("%s",write_msg);
      
    }

    if(argc == 4)
    {       
      if(*argv[2] != '=')
      {
        printf("Yanlis deger girdiniz");
      }
      
      int fd[2]; 
      pid_t pid; 

      if(pipe(fd)==-1)
      printf("pipe olusturulamadi");
      else
      printf("\nPipe olusturuldu!\n");

      pid = fork();
      if(pid < 0)
        printf("fork olusturulamadi");

      if(pid > 0)
      {
        close(fd[READ_END]);
        write(fd[WRITE_END],write_msg,strlen(write_msg)+1);
        close(fd[WRITE_END]);
        wait(NULL);
      }
      else
      { 
        char m = "0"+ i;
        char myMore[] = "./";
        strncat(myMore, argv[3], sizeof(argv[3])); 
        char *args[]={myMore,NULL}; 
        execv(args[0],args);
      }
    }
    else
    {
      printf("yanlis deger girdiniz");
    }
  
  return 0;
}
 
int dosyaSize(char *argv[])
{
  int i;
  FILE *fp;
  fp = fopen(argv[1],"r");
  if(fp=fopen(argv[1],"r"))
   {
    char karakter= fgetc(fp);
    while(karakter != EOF)
    {
       karakter = fgetc(fp);
       i++;
    }
   }
return i;
}



